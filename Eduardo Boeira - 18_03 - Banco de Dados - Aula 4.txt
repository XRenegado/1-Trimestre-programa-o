Atividade 1 


CREATE DATABASE BIBLIOTECA;
USE BIBLIOTECA;
CREATE TABLE USUARIO (
        MATRICULA INT NOT NULL AUTO_INCREMENT,
        PRIMARY KEY(MATRICULA),
        NOME VARCHAR(100),
        ENDERECO VARCHAR(100),
        EMAIL VARCHAR(100)
);


CREATE TABLE LIVRO (
        CODIGO INT NOT NULL AUTO_INCREMENT,
    MATRICULA INT,
    FOREIGN KEY (MATRICULA) REFERENCES USUARIO (MATRICULA),
        PRIMARY KEY(CODIGO),
        TITULO VARCHAR(100),
        EDICAO VARCHAR(100),
        DATA_EMPRESTIMO DATE,
        DATA_DEVOLUCAO DATE,
        DATA_RESERVA DATE
);


CREATE TABLE RESERVAR (
    CODIGO_LIVRO INT NOT NULL,
    MATRICULA INT NOT NULL,
    PRIMARY KEY (CODIGO, MATRICULA),
    FOREIGN KEY (CODIGO) REFERENCES ENTIDADE_A (CODIGO),
    FOREIGN KEY (MATRICULA) REFERENCES ENTIDADE_B (MATRICULA)
);


CREATE TABLE AUTOR (
        CODIGO INT NOT NULL AUTO_INCREMENT,
        PRIMARY KEY(CODIGO),
        NOME VARCHAR(100),
        NACIONALIDADE VARCHAR(100),
        SITE VARCHAR(100),
        EMAIL VARCHAR(100)
);


CREATE TABLE ASSUNTO (
        CODIGO INT NOT NULL AUTO_INCREMENT,
        PRIMARY KEY(CODIGO),
        NOME VARCHAR(100)
);


CREATE TABLE ESCREVER (
    CODIGO_AUTOR INT NOT NULL,
    CODIGO_ASSUNTO INT NOT NULL,
    PRIMARY KEY (CODIGO_AUTOR, CODIGO_ASSUNTO),
    FOREIGN KEY (CODIGO_AUTOR) REFERENCES AUTOR (CODIGO_AUTOR),
    FOREIGN KEY (CODIGO_ASSUNTO) REFERENCES ASSUNTO (CODIGO_ASSUNTO)
);


CREATE TABLE CLASSIFICAR (
    CODIGO_LIVRO INT NOT NULL,
    CODIGO_ASSUNTO INT NOT NULL,
    PRIMARY KEY (CODIGO_LIVRO, CODIGO_ASSUNTO),
    FOREIGN KEY (CODIGO_LIVRO) REFERENCES LIVRO (CODIGO_LIVRO),
    FOREIGN KEY (CODIGO_ASSUNTO) REFERENCES ASSUNTO (CODIGO_ASSUNTO)
);




Atividade 2 


CREATE DATABASE EMPRESA;
CREATE TABLE DEPARTAMENTO (
    ID_DEPARTAMENTO INT NOT NULL AUTO_INCREMENT,
    NOME VARCHAR(100),
    NUMERO INT,
    PRIMARY KEY (ID_DEPARTAMENTO)
);


CREATE TABLE FUNCIONARIO (
    ID_FUNCIONARIO INT NOT NULL AUTO_INCREMENT,
    ID_DEPARTAMENTO INT,
    NOME VARCHAR(100),
    SEGURO_SOCIAL VARCHAR(50),
    SEXO CHAR(1),
    SALARIO INT,
    DATA_NASCIMENTO DATE,


    PRIMARY KEY (ID_FUNCIONARIO),
    FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTO (ID_DEPARTAMENTO)
);


CREATE TABLE PROJETO (
    ID_PROJETO INT NOT NULL AUTO_INCREMENT,
    ID_LOCALIZACAO INT,
    ID_DEPARTAMENTO INT,
    NOME VARCHAR(100),
    NUMERO INT,


    PRIMARY KEY (ID_PROJETO),
    FOREIGN KEY (ID_LOCALIZACAO) REFERENCES LOCALIZACAO (ID_LOCALIZACAO),
    FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTO (ID_DEPARTAMENTO)
);


CREATE TABLE LOCALIZACAO (
    ID_LOCALIZACAO INT NOT NULL AUTO_INCREMENT,
    NOME VARCHAR(100),


    PRIMARY KEY (ID_LOCALIZACAO)
);


CREATE TABLE DEPEDENTES (
    ID_DEPEDENTES INT NOT NULL AUTO_INCREMENT,
    ID_FUNCIONARIO INT,


    NOME VARCHAR(100),
    SEXO CHAR(1),
    RELACIONAMENTO VARCHAR(100),


    PRIMARY KEY (ID_DEPEDENTES),
    FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIO (ID_FUNCIONARIO)
);


CREATE TABLE TRABALHAR (
    HORAS_TRABALHADAS INT,


    ID_FUNCIONARIO INT NOT NULL,


    ID_PROJETO INT NOT NULL,


    PRIMARY KEY (ID_FUNCIONARIO, ID_PROJETO),


    FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIO (ID_FUNCIONARIO),


    FOREIGN KEY (ID_PROJETO) REFERENCES PROJETO (ID_PROJETO)
);


CREATE TABLE GERENCIAR (
    DATA_INICIO DATE,


    ID_FUNCIONARIO INT NOT NULL,


    ID_DEPARTAMENTO INT NOT NULL,


    PRIMARY KEY (ID_FUNCIONARIO, ID_DEPARTAMENTO),


    FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIO (ID_FUNCIONARIO),


    FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTO (ID_DEPARTAMENTO)
);


CREATE TABLE DEPARTAMENTO_LOCALIZACAO (
    ID_DEPARTAMENTO INT NOT NULL,


    ID_LOCALIZACAO INT NOT NULL,


    PRIMARY KEY (ID_DEPARTAMENTO, ID_LOCALIZACAO),


    FOREIGN KEY (ID_DEPARTAMENTO) REFERENCES DEPARTAMENTO (ID_DEPARTAMENTO),


    FOREIGN KEY (ID_FUNCIONARIO) REFERENCES FUNCIONARIO (ID_FUNCIONARIO)
);